{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ModalComponent {\n  constructor() {\n    this.modalTrigger = document.querySelectorAll('[data-modal]');\n    this.modal = document.querySelector('.modal');\n    this.modalCloseBtn = document.querySelector('[data-close]');\n  }\n}\nModalComponent.ɵfac = function ModalComponent_Factory(t) {\n  return new (t || ModalComponent)();\n};\nModalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ModalComponent,\n  selectors: [[\"app-modal\"]],\n  decls: 2,\n  vars: 0,\n  template: function ModalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"modal works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nfunction openModal() {\n  modal.classList.add('show');\n  modal.classList.remove('hide');\n  document.body.style.overflow = \"hidden\";\n  clearInterval(modalTimerId);\n}\nmodalTrigger.forEach(btn => {\n  btn.addEventListener('click', openModal);\n});\nfunction closeModal() {\n  modal.classList.add('hide');\n  modal.classList.remove('show');\n  document.body.style.overflow = \"\";\n}\nmodalCloseBtn.addEventListener('click', closeModal);\nmodal.addEventListener('click', e => {\n  if (e.target === modal) {\n    closeModal();\n  }\n});\ndocument.addEventListener('keydown', e => {\n  if (e.code === 'Escape' && modal.classList.contains('show')) {\n    closeModal();\n  }\n});\n//   const modalTimerId = setTimeout(openModal, 5000);\nfunction showModalByScroll() {\n  if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n    openModal();\n    window.removeEventListener('scroll', showModalByScroll);\n  }\n}\nwindow.addEventListener('scroll', showModalByScroll);","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,cAAc;EAL3BC;IAMQ,iBAAY,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,cAAc,CAAC;IACtD,UAAK,GAAGD,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;IACxC,kBAAa,GAAGF,QAAQ,CAACE,aAAa,CAAC,cAAc,CAAC;;;AAHnDJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCP3BC,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI;;;;;ADYX,SAASC,SAAS;EACdC,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EAC3BF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;EAC9BZ,QAAQ,CAACa,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;EACvCC,aAAa,CAACC,YAAY,CAAC;AAC/B;AAEFC,YAAY,CAACC,OAAO,CAACC,GAAG,IAAG;EACzBA,GAAG,CAACC,gBAAgB,CAAC,OAAO,EAAEb,SAAS,CAAC;AAC1C,CAAC,CAAC;AAGF,SAASc,UAAU;EACjBb,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;EAC3BF,KAAK,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;EAC9BZ,QAAQ,CAACa,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,EAAE;AACnC;AAEAQ,aAAa,CAACF,gBAAgB,CAAC,OAAO,EAAEC,UAAU,CAAC;AAEnDb,KAAK,CAACY,gBAAgB,CAAC,OAAO,EAAGG,CAAC,IAAI;EAClC,IAAGA,CAAC,CAACC,MAAM,KAAKhB,KAAK,EAAE;IACrBa,UAAU,EAAE;;AAElB,CAAC,CAAC;AAEFtB,QAAQ,CAACqB,gBAAgB,CAAC,SAAS,EAAGG,CAAC,IAAI;EACzC,IAAGA,CAAC,CAACE,IAAI,KAAK,QAAQ,IAAIjB,KAAK,CAACC,SAAS,CAACiB,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC5DL,UAAU,EAAE;;AAEd,CAAC,CAAC;AAEJ;AAEE,SAASM,iBAAiB;EACxB,IAAGC,MAAM,CAACC,WAAW,GAAG9B,QAAQ,CAAC+B,eAAe,CAACC,YAAY,IAAIhC,QAAQ,CAAC+B,eAAe,CAACE,YAAY,EAAE;IACpGzB,SAAS,EAAE;IACXqB,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEN,iBAAiB,CAAC;;AAE7D;AACIC,MAAM,CAACR,gBAAgB,CAAC,QAAQ,EAAEO,iBAAiB,CAAC","names":["ModalComponent","constructor","document","querySelectorAll","querySelector","selectors","decls","vars","template","i0","openModal","modal","classList","add","remove","body","style","overflow","clearInterval","modalTimerId","modalTrigger","forEach","btn","addEventListener","closeModal","modalCloseBtn","e","target","code","contains","showModalByScroll","window","pageYOffset","documentElement","clientHeight","scrollHeight","removeEventListener"],"sourceRoot":"","sources":["C:\\Users\\Alexey\\Documents\\GitHub\\AngularApp\\src\\app\\Components\\modal\\modal.component.ts","C:\\Users\\Alexey\\Documents\\GitHub\\AngularApp\\src\\app\\Components\\modal\\modal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.css']\r\n})\r\nexport class ModalComponent {\r\n  const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n          modal = document.querySelector('.modal'),\r\n          modalCloseBtn = document.querySelector('[data-close]');\r\n      \r\n        function openModal() {\r\n            modal.classList.add('show');\r\n            modal.classList.remove('hide');\r\n            document.body.style.overflow = \"hidden\";\r\n            clearInterval(modalTimerId)\r\n        }\r\n\r\n      modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', openModal);\r\n      });   \r\n      \r\n\r\n      function closeModal() {\r\n        modal.classList.add('hide')\r\n        modal.classList.remove('show')\r\n        document.body.style.overflow = \"\"\r\n      }\r\n\r\n      modalCloseBtn.addEventListener('click', closeModal);\r\n\r\n      modal.addEventListener('click', (e) => {\r\n          if(e.target === modal) {\r\n            closeModal()\r\n          }\r\n      })\r\n\r\n      document.addEventListener('keydown', (e) => {\r\n        if(e.code === 'Escape' && modal.classList.contains('show')) {\r\n        closeModal()\r\n        }\r\n      })\r\n\r\n    //   const modalTimerId = setTimeout(openModal, 5000);\r\n  \r\n      function showModalByScroll() {\r\n        if(window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal()\r\n            window.removeEventListener('scroll', showModalByScroll)\r\n          }\r\n      }\r\n          window.addEventListener('scroll', showModalByScroll); \r\n}\r\n","<p>modal works!</p>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}